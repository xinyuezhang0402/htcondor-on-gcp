{% import "path_utils.jinja" as path_utils with context %}

{% set zone = properties["zone"] %}
{% set machineType = properties["machineType"] %}
{% set acceleratorType = properties["acceleratorType"] %}
{% set acceleratorCount = properties["acceleratorCount"] %}
{% set networks = [] %}
{% for network in properties["network"] %}
{% set _ = networks.append(path_utils.networkPath(network)) %}
{% endfor %}
{% set subnetworks = properties["subnetwork"] %}
{% set externalIPs = properties["externalIP"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set bootDiskSizeGb = properties["bootDiskSizeGb"] %}
{% set preemptible = properties["preemptible"] %}
{% set hasExternalIP = externalIPs is defined and externalIPs[0] != "NONE" %}
{# Software status only works if the VM has an external IP. #}
{% set enableStatusWaiter = hasExternalIP %}
{# Convert boolean type to integer. Stackdriver metadata items need value 0 or 1. #}
{% set enableStackdriverLogging = "1" if properties["enableStackdriverLogging"] else "0" %}
{# Convert boolean type to integer. Stackdriver metadata items need value 0 or 1. #}
{% set enableStackdriverMonitoring = "1" if properties["enableStackdriverMonitoring"] else "0" %}
resources:
  - name: {{ env["deployment"] }}-compute-vm-tmpl
    type: compute.v1.instanceTemplate
    properties:
      project: {{ env["project"] }}
      properties:
        machineType: {{ machineType }}
        disks:
        - deviceName: boot
          type: PERSISTENT
          boot: true
          autoDelete: true
          initializeParams:
            sourceImage: https://www.googleapis.com/compute/v1/projects/kbatch-public/global/images/condor-compute-v2-0-1
            diskSizeGb: {{ bootDiskSizeGb }}
            diskType: {{ bootDiskType }}
        networkInterfaces:
        - network: global/networks/default
          accessConfigs:
          - name: External NAT
            type: ONE_TO_ONE_NAT
        {% if acceleratorCount > 0 %}
        guestAccelerators:
          - acceleratorType: {{ acceleratorType }}
            acceleratorCount: {{ acceleratorCount }}
        {% endif %}
        serviceAccounts:
          - email: default
            scopes:
              - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
              - 'https://www.googleapis.com/auth/devstorage.read_only'
              - 'https://www.googleapis.com/auth/logging.write'
              - 'https://www.googleapis.com/auth/monitoring.write'
        scheduling:
          preemptible: {{ preemptible }}
          onHostMaintenance: TERMINATE
        metadata:
          items:
            - key: startup-script
              value: |-
                #!/bin/bash
                echo 'CONDOR_HOST = {{ env["deployment"] }}-master-vm-0' >> /etc/condor/config.d/condor_config.local
                echo 'CONDOR_ADMIN = {{ properties["admin"] }}' >> /etc/condor/config.d/condor_config.local
                echo 'use feature : GPUs' >> /etc/condor/config.d/condor_config.local
                usermod -aG docker condor
                systemctl start docker
                systemctl enable docker
                chmod 666 /var/run/docker.sock
                condor_reconfig
            - key: google-logging-enable
              value: {{ enableStackdriverLogging }}
            - key: google-monitoring-enable
              value: {{ enableStackdriverMonitoring }}
        tags:
          items:
            - {{ env["deployment"] }}-deployment
            - {{ env["deployment"] }}-compute-tier
  - name: {{ env["deployment"] }}-compute-igm
    type: compute.v1.instanceGroupManagers
    properties:
      baseInstanceName: compute
      instanceTemplate: $(ref.{{ env["deployment"] }}-compute-vm-tmpl.selfLink)
      targetSize: 0
      zone: {{ properties["zone"] }}
