{% import "path_utils.jinja" as path_utils with context %}

{% set instanceCount = properties["instanceCount"] %}
{% set zone = properties["zone"] %}
{% set list = properties["zone"].split('-') %}
{% set region = list[0] + "-" + list[1] %}
{% set machineType = properties["machineType"] %}
{% set networks = [] %}
{% for network in properties["network"] %}
{% set _ = networks.append(path_utils.networkPath(network)) %}
{% endfor %}
{% set subnetworks = properties["subnetwork"] %}
{% set externalIPs = properties["externalIP"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set bootDiskSizeGb = properties["bootDiskSizeGb"] %}
{% set hasExternalIP = externalIPs is defined and externalIPs[0] != "NONE" %}
{# Software status only works if the VM has an external IP. #}
{% set enableStatusWaiter = hasExternalIP %}
{# Convert boolean type to integer. Stackdriver metadata items need value 0 or 1. #}
{% set enableStackdriverLogging = "1" if properties["enableStackdriverLogging"] else "0" %}
{# Convert boolean type to integer. Stackdriver metadata items need value 0 or 1. #}
{% set enableStackdriverMonitoring = "1" if properties["enableStackdriverMonitoring"] else "0" %}
{% if instanceCount <= 0 %}
resources: []
{% else %}
resources:
  {% for vmIndex in range(instanceCount) %}
  - name: {{ env["deployment"] }}-submit-vm-tmpl-{{ vmIndex }}
    type: vm_instance.py
    properties:
      instanceName: {{ env["deployment"] }}-submit-vm-{{ vmIndex }}
      sourceImage: https://www.googleapis.com/compute/v1/projects/kbatch-public/global/images/condor-submit-v2-0-0
      zone: {{ zone }}
      machineType: {{ machineType }}
      networks:
      {% for network in networks %}
        - {{ network }}
      {% endfor %}
      {% if subnetworks is defined and subnetworks %}
      subnetworks:
      {% for subnetwork in subnetworks %}
        - {{ subnetwork or '' }}
      {% endfor %}
      {% endif %}
      {% if externalIPs is defined and externalIPs %}
      externalIPs:
      {% for externalIP in externalIPs %}
        - {{ externalIP }}
      {% endfor %}
      {% endif %}
      bootDiskType: {{ bootDiskType }}
      bootDiskSizeGb: {{ bootDiskSizeGb }}
      serviceAccounts:
        - email: "default"
          scopes:
          - "https://www.googleapis.com/auth/logging.write"
          - "https://www.googleapis.com/auth/compute"
          - "https://www.googleapis.com/auth/servicecontrol"
          - "https://www.googleapis.com/auth/service.management.readonly"
          - "https://www.googleapis.com/auth/monitoring.write"
          - "https://www.googleapis.com/auth/trace.append"
          - "https://www.googleapis.com/auth/devstorage.read_only"
      metadata:
        items:
          - key: startup-script
            value: |-
              #!/bin/bash
              echo 'CONDOR_HOST = {{ env["deployment"] }}-master-vm-0' >> /etc/condor/config.d/condor_config.local
              echo 'CONDOR_ADMIN = {{ properties["admin"] }}' >> /etc/condor/config.d/condor_config.local
              condor_reconfig
              if ! grep -q "autoscaler" /etc/crontab; then
                  sudo echo '* * * * * root /usr/bin/python /usr/local/autoscaler/autoscaler.py --project_id {{ env["project"] }} --region {{ region }} --zone {{ zone }} --group_manager {{env["deployment"] }}-compute-igm --verbosity 1 >> /tmp/cron.log 2>&1' >> /etc/crontab
              fi
          - key: google-logging-enable
            value: {{ enableStackdriverLogging }}
          - key: google-monitoring-enable
            value: {{ enableStackdriverMonitoring }}
      tags:
        items:
          - {{ env["deployment"] }}-deployment
          - {{ env["deployment"] }}-submit-tier
  {% endfor %}

outputs:
  {% for vmIndex in range(instanceCount) %}
  - name: vmId{{ vmIndex }}
    value: $(ref.{{ env["deployment"] }}-submit-vm-{{ vmIndex }}.id)
  - name: vmExternalIP{{ vmIndex }}
    {% if hasExternalIP %}
    value: $(ref.{{ env["deployment"] }}-submit-vm-tmpl-{{ vmIndex }}.ip)
    {% else %}
    value: NONE
    {% endif %}
  - name: vmInternalIP{{ vmIndex }}
    value: $(ref.{{ env["deployment"] }}-submit-vm-tmpl-{{ vmIndex }}.internalIP)
  - name: vmName{{ vmIndex }}
    value: {{ env["deployment"] }}-submit-vm-{{ vmIndex }}
  - name: vmSelfLink{{ vmIndex }}
    value: $(ref.{{ env["deployment"] }}-submit-vm-{{ vmIndex }}.selfLink)
  {% endfor %}
  - name: hasExternalIP
    value: {{ hasExternalIP }}
{% endif %}
